
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Creators
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type Creators = $Result.DefaultSelection<Prisma.$CreatorsPayload>
/**
 * Model IG_Media
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type IG_Media = $Result.DefaultSelection<Prisma.$IG_MediaPayload>
/**
 * Model Scraped_recipes
 * 
 */
export type Scraped_recipes = $Result.DefaultSelection<Prisma.$Scraped_recipesPayload>
/**
 * Model Users
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type Users = $Result.DefaultSelection<Prisma.$UsersPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Creators
 * const creators = await prisma.creators.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Creators
   * const creators = await prisma.creators.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.creators`: Exposes CRUD operations for the **Creators** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Creators
    * const creators = await prisma.creators.findMany()
    * ```
    */
  get creators(): Prisma.CreatorsDelegate<ExtArgs>;

  /**
   * `prisma.iG_Media`: Exposes CRUD operations for the **IG_Media** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more IG_Medias
    * const iG_Medias = await prisma.iG_Media.findMany()
    * ```
    */
  get iG_Media(): Prisma.IG_MediaDelegate<ExtArgs>;

  /**
   * `prisma.scraped_recipes`: Exposes CRUD operations for the **Scraped_recipes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Scraped_recipes
    * const scraped_recipes = await prisma.scraped_recipes.findMany()
    * ```
    */
  get scraped_recipes(): Prisma.Scraped_recipesDelegate<ExtArgs>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **Users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.UsersDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.16.2
   * Query Engine version: 34ace0eb2704183d2c05b60b52fba5c43c13f303
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Creators: 'Creators',
    IG_Media: 'IG_Media',
    Scraped_recipes: 'Scraped_recipes',
    Users: 'Users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "creators" | "iG_Media" | "scraped_recipes" | "users"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Creators: {
        payload: Prisma.$CreatorsPayload<ExtArgs>
        fields: Prisma.CreatorsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CreatorsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CreatorsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorsPayload>
          }
          findFirst: {
            args: Prisma.CreatorsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CreatorsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorsPayload>
          }
          findMany: {
            args: Prisma.CreatorsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorsPayload>[]
          }
          create: {
            args: Prisma.CreatorsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorsPayload>
          }
          createMany: {
            args: Prisma.CreatorsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CreatorsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorsPayload>[]
          }
          delete: {
            args: Prisma.CreatorsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorsPayload>
          }
          update: {
            args: Prisma.CreatorsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorsPayload>
          }
          deleteMany: {
            args: Prisma.CreatorsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CreatorsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CreatorsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CreatorsPayload>
          }
          aggregate: {
            args: Prisma.CreatorsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCreators>
          }
          groupBy: {
            args: Prisma.CreatorsGroupByArgs<ExtArgs>
            result: $Utils.Optional<CreatorsGroupByOutputType>[]
          }
          count: {
            args: Prisma.CreatorsCountArgs<ExtArgs>
            result: $Utils.Optional<CreatorsCountAggregateOutputType> | number
          }
        }
      }
      IG_Media: {
        payload: Prisma.$IG_MediaPayload<ExtArgs>
        fields: Prisma.IG_MediaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IG_MediaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IG_MediaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IG_MediaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IG_MediaPayload>
          }
          findFirst: {
            args: Prisma.IG_MediaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IG_MediaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IG_MediaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IG_MediaPayload>
          }
          findMany: {
            args: Prisma.IG_MediaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IG_MediaPayload>[]
          }
          create: {
            args: Prisma.IG_MediaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IG_MediaPayload>
          }
          createMany: {
            args: Prisma.IG_MediaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.IG_MediaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IG_MediaPayload>[]
          }
          delete: {
            args: Prisma.IG_MediaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IG_MediaPayload>
          }
          update: {
            args: Prisma.IG_MediaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IG_MediaPayload>
          }
          deleteMany: {
            args: Prisma.IG_MediaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.IG_MediaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.IG_MediaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IG_MediaPayload>
          }
          aggregate: {
            args: Prisma.IG_MediaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIG_Media>
          }
          groupBy: {
            args: Prisma.IG_MediaGroupByArgs<ExtArgs>
            result: $Utils.Optional<IG_MediaGroupByOutputType>[]
          }
          count: {
            args: Prisma.IG_MediaCountArgs<ExtArgs>
            result: $Utils.Optional<IG_MediaCountAggregateOutputType> | number
          }
        }
      }
      Scraped_recipes: {
        payload: Prisma.$Scraped_recipesPayload<ExtArgs>
        fields: Prisma.Scraped_recipesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Scraped_recipesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Scraped_recipesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Scraped_recipesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Scraped_recipesPayload>
          }
          findFirst: {
            args: Prisma.Scraped_recipesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Scraped_recipesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Scraped_recipesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Scraped_recipesPayload>
          }
          findMany: {
            args: Prisma.Scraped_recipesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Scraped_recipesPayload>[]
          }
          create: {
            args: Prisma.Scraped_recipesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Scraped_recipesPayload>
          }
          createMany: {
            args: Prisma.Scraped_recipesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Scraped_recipesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Scraped_recipesPayload>[]
          }
          delete: {
            args: Prisma.Scraped_recipesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Scraped_recipesPayload>
          }
          update: {
            args: Prisma.Scraped_recipesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Scraped_recipesPayload>
          }
          deleteMany: {
            args: Prisma.Scraped_recipesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Scraped_recipesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Scraped_recipesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Scraped_recipesPayload>
          }
          aggregate: {
            args: Prisma.Scraped_recipesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateScraped_recipes>
          }
          groupBy: {
            args: Prisma.Scraped_recipesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Scraped_recipesGroupByOutputType>[]
          }
          count: {
            args: Prisma.Scraped_recipesCountArgs<ExtArgs>
            result: $Utils.Optional<Scraped_recipesCountAggregateOutputType> | number
          }
        }
      }
      Users: {
        payload: Prisma.$UsersPayload<ExtArgs>
        fields: Prisma.UsersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findFirst: {
            args: Prisma.UsersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findMany: {
            args: Prisma.UsersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          create: {
            args: Prisma.UsersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          createMany: {
            args: Prisma.UsersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          delete: {
            args: Prisma.UsersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          update: {
            args: Prisma.UsersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          deleteMany: {
            args: Prisma.UsersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.UsersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model Creators
   */

  export type AggregateCreators = {
    _count: CreatorsCountAggregateOutputType | null
    _min: CreatorsMinAggregateOutputType | null
    _max: CreatorsMaxAggregateOutputType | null
  }

  export type CreatorsMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    name: string | null
    access_token_expiration: Date | null
    fb_page_id: string | null
    ig_business_account_id: string | null
    ig_business_account_username: string | null
    fb_user_access_token: string | null
  }

  export type CreatorsMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    name: string | null
    access_token_expiration: Date | null
    fb_page_id: string | null
    ig_business_account_id: string | null
    ig_business_account_username: string | null
    fb_user_access_token: string | null
  }

  export type CreatorsCountAggregateOutputType = {
    id: number
    created_at: number
    name: number
    access_token_expiration: number
    fb_page_id: number
    ig_business_account_id: number
    ig_business_account_username: number
    fb_user_access_token: number
    _all: number
  }


  export type CreatorsMinAggregateInputType = {
    id?: true
    created_at?: true
    name?: true
    access_token_expiration?: true
    fb_page_id?: true
    ig_business_account_id?: true
    ig_business_account_username?: true
    fb_user_access_token?: true
  }

  export type CreatorsMaxAggregateInputType = {
    id?: true
    created_at?: true
    name?: true
    access_token_expiration?: true
    fb_page_id?: true
    ig_business_account_id?: true
    ig_business_account_username?: true
    fb_user_access_token?: true
  }

  export type CreatorsCountAggregateInputType = {
    id?: true
    created_at?: true
    name?: true
    access_token_expiration?: true
    fb_page_id?: true
    ig_business_account_id?: true
    ig_business_account_username?: true
    fb_user_access_token?: true
    _all?: true
  }

  export type CreatorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Creators to aggregate.
     */
    where?: CreatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Creators to fetch.
     */
    orderBy?: CreatorsOrderByWithRelationInput | CreatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CreatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Creators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Creators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Creators
    **/
    _count?: true | CreatorsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CreatorsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CreatorsMaxAggregateInputType
  }

  export type GetCreatorsAggregateType<T extends CreatorsAggregateArgs> = {
        [P in keyof T & keyof AggregateCreators]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCreators[P]>
      : GetScalarType<T[P], AggregateCreators[P]>
  }




  export type CreatorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CreatorsWhereInput
    orderBy?: CreatorsOrderByWithAggregationInput | CreatorsOrderByWithAggregationInput[]
    by: CreatorsScalarFieldEnum[] | CreatorsScalarFieldEnum
    having?: CreatorsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CreatorsCountAggregateInputType | true
    _min?: CreatorsMinAggregateInputType
    _max?: CreatorsMaxAggregateInputType
  }

  export type CreatorsGroupByOutputType = {
    id: string
    created_at: Date
    name: string
    access_token_expiration: Date | null
    fb_page_id: string | null
    ig_business_account_id: string | null
    ig_business_account_username: string | null
    fb_user_access_token: string | null
    _count: CreatorsCountAggregateOutputType | null
    _min: CreatorsMinAggregateOutputType | null
    _max: CreatorsMaxAggregateOutputType | null
  }

  type GetCreatorsGroupByPayload<T extends CreatorsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CreatorsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CreatorsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CreatorsGroupByOutputType[P]>
            : GetScalarType<T[P], CreatorsGroupByOutputType[P]>
        }
      >
    >


  export type CreatorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    name?: boolean
    access_token_expiration?: boolean
    fb_page_id?: boolean
    ig_business_account_id?: boolean
    ig_business_account_username?: boolean
    fb_user_access_token?: boolean
  }, ExtArgs["result"]["creators"]>

  export type CreatorsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    name?: boolean
    access_token_expiration?: boolean
    fb_page_id?: boolean
    ig_business_account_id?: boolean
    ig_business_account_username?: boolean
    fb_user_access_token?: boolean
  }, ExtArgs["result"]["creators"]>

  export type CreatorsSelectScalar = {
    id?: boolean
    created_at?: boolean
    name?: boolean
    access_token_expiration?: boolean
    fb_page_id?: boolean
    ig_business_account_id?: boolean
    ig_business_account_username?: boolean
    fb_user_access_token?: boolean
  }


  export type $CreatorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Creators"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      name: string
      access_token_expiration: Date | null
      fb_page_id: string | null
      ig_business_account_id: string | null
      ig_business_account_username: string | null
      fb_user_access_token: string | null
    }, ExtArgs["result"]["creators"]>
    composites: {}
  }

  type CreatorsGetPayload<S extends boolean | null | undefined | CreatorsDefaultArgs> = $Result.GetResult<Prisma.$CreatorsPayload, S>

  type CreatorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CreatorsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CreatorsCountAggregateInputType | true
    }

  export interface CreatorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Creators'], meta: { name: 'Creators' } }
    /**
     * Find zero or one Creators that matches the filter.
     * @param {CreatorsFindUniqueArgs} args - Arguments to find a Creators
     * @example
     * // Get one Creators
     * const creators = await prisma.creators.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CreatorsFindUniqueArgs>(args: SelectSubset<T, CreatorsFindUniqueArgs<ExtArgs>>): Prisma__CreatorsClient<$Result.GetResult<Prisma.$CreatorsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Creators that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CreatorsFindUniqueOrThrowArgs} args - Arguments to find a Creators
     * @example
     * // Get one Creators
     * const creators = await prisma.creators.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CreatorsFindUniqueOrThrowArgs>(args: SelectSubset<T, CreatorsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CreatorsClient<$Result.GetResult<Prisma.$CreatorsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Creators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorsFindFirstArgs} args - Arguments to find a Creators
     * @example
     * // Get one Creators
     * const creators = await prisma.creators.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CreatorsFindFirstArgs>(args?: SelectSubset<T, CreatorsFindFirstArgs<ExtArgs>>): Prisma__CreatorsClient<$Result.GetResult<Prisma.$CreatorsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Creators that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorsFindFirstOrThrowArgs} args - Arguments to find a Creators
     * @example
     * // Get one Creators
     * const creators = await prisma.creators.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CreatorsFindFirstOrThrowArgs>(args?: SelectSubset<T, CreatorsFindFirstOrThrowArgs<ExtArgs>>): Prisma__CreatorsClient<$Result.GetResult<Prisma.$CreatorsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Creators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Creators
     * const creators = await prisma.creators.findMany()
     * 
     * // Get first 10 Creators
     * const creators = await prisma.creators.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const creatorsWithIdOnly = await prisma.creators.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CreatorsFindManyArgs>(args?: SelectSubset<T, CreatorsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreatorsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Creators.
     * @param {CreatorsCreateArgs} args - Arguments to create a Creators.
     * @example
     * // Create one Creators
     * const Creators = await prisma.creators.create({
     *   data: {
     *     // ... data to create a Creators
     *   }
     * })
     * 
     */
    create<T extends CreatorsCreateArgs>(args: SelectSubset<T, CreatorsCreateArgs<ExtArgs>>): Prisma__CreatorsClient<$Result.GetResult<Prisma.$CreatorsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Creators.
     * @param {CreatorsCreateManyArgs} args - Arguments to create many Creators.
     * @example
     * // Create many Creators
     * const creators = await prisma.creators.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CreatorsCreateManyArgs>(args?: SelectSubset<T, CreatorsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Creators and returns the data saved in the database.
     * @param {CreatorsCreateManyAndReturnArgs} args - Arguments to create many Creators.
     * @example
     * // Create many Creators
     * const creators = await prisma.creators.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Creators and only return the `id`
     * const creatorsWithIdOnly = await prisma.creators.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CreatorsCreateManyAndReturnArgs>(args?: SelectSubset<T, CreatorsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CreatorsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Creators.
     * @param {CreatorsDeleteArgs} args - Arguments to delete one Creators.
     * @example
     * // Delete one Creators
     * const Creators = await prisma.creators.delete({
     *   where: {
     *     // ... filter to delete one Creators
     *   }
     * })
     * 
     */
    delete<T extends CreatorsDeleteArgs>(args: SelectSubset<T, CreatorsDeleteArgs<ExtArgs>>): Prisma__CreatorsClient<$Result.GetResult<Prisma.$CreatorsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Creators.
     * @param {CreatorsUpdateArgs} args - Arguments to update one Creators.
     * @example
     * // Update one Creators
     * const creators = await prisma.creators.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CreatorsUpdateArgs>(args: SelectSubset<T, CreatorsUpdateArgs<ExtArgs>>): Prisma__CreatorsClient<$Result.GetResult<Prisma.$CreatorsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Creators.
     * @param {CreatorsDeleteManyArgs} args - Arguments to filter Creators to delete.
     * @example
     * // Delete a few Creators
     * const { count } = await prisma.creators.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CreatorsDeleteManyArgs>(args?: SelectSubset<T, CreatorsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Creators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Creators
     * const creators = await prisma.creators.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CreatorsUpdateManyArgs>(args: SelectSubset<T, CreatorsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Creators.
     * @param {CreatorsUpsertArgs} args - Arguments to update or create a Creators.
     * @example
     * // Update or create a Creators
     * const creators = await prisma.creators.upsert({
     *   create: {
     *     // ... data to create a Creators
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Creators we want to update
     *   }
     * })
     */
    upsert<T extends CreatorsUpsertArgs>(args: SelectSubset<T, CreatorsUpsertArgs<ExtArgs>>): Prisma__CreatorsClient<$Result.GetResult<Prisma.$CreatorsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Creators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorsCountArgs} args - Arguments to filter Creators to count.
     * @example
     * // Count the number of Creators
     * const count = await prisma.creators.count({
     *   where: {
     *     // ... the filter for the Creators we want to count
     *   }
     * })
    **/
    count<T extends CreatorsCountArgs>(
      args?: Subset<T, CreatorsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CreatorsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Creators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CreatorsAggregateArgs>(args: Subset<T, CreatorsAggregateArgs>): Prisma.PrismaPromise<GetCreatorsAggregateType<T>>

    /**
     * Group by Creators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CreatorsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CreatorsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CreatorsGroupByArgs['orderBy'] }
        : { orderBy?: CreatorsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CreatorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCreatorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Creators model
   */
  readonly fields: CreatorsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Creators.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CreatorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Creators model
   */ 
  interface CreatorsFieldRefs {
    readonly id: FieldRef<"Creators", 'String'>
    readonly created_at: FieldRef<"Creators", 'DateTime'>
    readonly name: FieldRef<"Creators", 'String'>
    readonly access_token_expiration: FieldRef<"Creators", 'DateTime'>
    readonly fb_page_id: FieldRef<"Creators", 'String'>
    readonly ig_business_account_id: FieldRef<"Creators", 'String'>
    readonly ig_business_account_username: FieldRef<"Creators", 'String'>
    readonly fb_user_access_token: FieldRef<"Creators", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Creators findUnique
   */
  export type CreatorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Creators
     */
    select?: CreatorsSelect<ExtArgs> | null
    /**
     * Filter, which Creators to fetch.
     */
    where: CreatorsWhereUniqueInput
  }

  /**
   * Creators findUniqueOrThrow
   */
  export type CreatorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Creators
     */
    select?: CreatorsSelect<ExtArgs> | null
    /**
     * Filter, which Creators to fetch.
     */
    where: CreatorsWhereUniqueInput
  }

  /**
   * Creators findFirst
   */
  export type CreatorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Creators
     */
    select?: CreatorsSelect<ExtArgs> | null
    /**
     * Filter, which Creators to fetch.
     */
    where?: CreatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Creators to fetch.
     */
    orderBy?: CreatorsOrderByWithRelationInput | CreatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Creators.
     */
    cursor?: CreatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Creators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Creators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Creators.
     */
    distinct?: CreatorsScalarFieldEnum | CreatorsScalarFieldEnum[]
  }

  /**
   * Creators findFirstOrThrow
   */
  export type CreatorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Creators
     */
    select?: CreatorsSelect<ExtArgs> | null
    /**
     * Filter, which Creators to fetch.
     */
    where?: CreatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Creators to fetch.
     */
    orderBy?: CreatorsOrderByWithRelationInput | CreatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Creators.
     */
    cursor?: CreatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Creators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Creators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Creators.
     */
    distinct?: CreatorsScalarFieldEnum | CreatorsScalarFieldEnum[]
  }

  /**
   * Creators findMany
   */
  export type CreatorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Creators
     */
    select?: CreatorsSelect<ExtArgs> | null
    /**
     * Filter, which Creators to fetch.
     */
    where?: CreatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Creators to fetch.
     */
    orderBy?: CreatorsOrderByWithRelationInput | CreatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Creators.
     */
    cursor?: CreatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Creators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Creators.
     */
    skip?: number
    distinct?: CreatorsScalarFieldEnum | CreatorsScalarFieldEnum[]
  }

  /**
   * Creators create
   */
  export type CreatorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Creators
     */
    select?: CreatorsSelect<ExtArgs> | null
    /**
     * The data needed to create a Creators.
     */
    data: XOR<CreatorsCreateInput, CreatorsUncheckedCreateInput>
  }

  /**
   * Creators createMany
   */
  export type CreatorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Creators.
     */
    data: CreatorsCreateManyInput | CreatorsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Creators createManyAndReturn
   */
  export type CreatorsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Creators
     */
    select?: CreatorsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Creators.
     */
    data: CreatorsCreateManyInput | CreatorsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Creators update
   */
  export type CreatorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Creators
     */
    select?: CreatorsSelect<ExtArgs> | null
    /**
     * The data needed to update a Creators.
     */
    data: XOR<CreatorsUpdateInput, CreatorsUncheckedUpdateInput>
    /**
     * Choose, which Creators to update.
     */
    where: CreatorsWhereUniqueInput
  }

  /**
   * Creators updateMany
   */
  export type CreatorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Creators.
     */
    data: XOR<CreatorsUpdateManyMutationInput, CreatorsUncheckedUpdateManyInput>
    /**
     * Filter which Creators to update
     */
    where?: CreatorsWhereInput
  }

  /**
   * Creators upsert
   */
  export type CreatorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Creators
     */
    select?: CreatorsSelect<ExtArgs> | null
    /**
     * The filter to search for the Creators to update in case it exists.
     */
    where: CreatorsWhereUniqueInput
    /**
     * In case the Creators found by the `where` argument doesn't exist, create a new Creators with this data.
     */
    create: XOR<CreatorsCreateInput, CreatorsUncheckedCreateInput>
    /**
     * In case the Creators was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CreatorsUpdateInput, CreatorsUncheckedUpdateInput>
  }

  /**
   * Creators delete
   */
  export type CreatorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Creators
     */
    select?: CreatorsSelect<ExtArgs> | null
    /**
     * Filter which Creators to delete.
     */
    where: CreatorsWhereUniqueInput
  }

  /**
   * Creators deleteMany
   */
  export type CreatorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Creators to delete
     */
    where?: CreatorsWhereInput
  }

  /**
   * Creators without action
   */
  export type CreatorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Creators
     */
    select?: CreatorsSelect<ExtArgs> | null
  }


  /**
   * Model IG_Media
   */

  export type AggregateIG_Media = {
    _count: IG_MediaCountAggregateOutputType | null
    _min: IG_MediaMinAggregateOutputType | null
    _max: IG_MediaMaxAggregateOutputType | null
  }

  export type IG_MediaMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    caption: string | null
    media_type: string | null
    permalink: string | null
    timestamp: Date | null
    ig_business_account_id: string | null
    page_id: string | null
    ig_business_account_username: string | null
    media_product_type: string | null
    ig_media_id: string | null
    image_url_l: string | null
    image_url_m: string | null
  }

  export type IG_MediaMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    caption: string | null
    media_type: string | null
    permalink: string | null
    timestamp: Date | null
    ig_business_account_id: string | null
    page_id: string | null
    ig_business_account_username: string | null
    media_product_type: string | null
    ig_media_id: string | null
    image_url_l: string | null
    image_url_m: string | null
  }

  export type IG_MediaCountAggregateOutputType = {
    id: number
    created_at: number
    caption: number
    media_type: number
    permalink: number
    timestamp: number
    ig_business_account_id: number
    page_id: number
    ig_business_account_username: number
    media_product_type: number
    ig_media_id: number
    image_url_l: number
    image_url_m: number
    _all: number
  }


  export type IG_MediaMinAggregateInputType = {
    id?: true
    created_at?: true
    caption?: true
    media_type?: true
    permalink?: true
    timestamp?: true
    ig_business_account_id?: true
    page_id?: true
    ig_business_account_username?: true
    media_product_type?: true
    ig_media_id?: true
    image_url_l?: true
    image_url_m?: true
  }

  export type IG_MediaMaxAggregateInputType = {
    id?: true
    created_at?: true
    caption?: true
    media_type?: true
    permalink?: true
    timestamp?: true
    ig_business_account_id?: true
    page_id?: true
    ig_business_account_username?: true
    media_product_type?: true
    ig_media_id?: true
    image_url_l?: true
    image_url_m?: true
  }

  export type IG_MediaCountAggregateInputType = {
    id?: true
    created_at?: true
    caption?: true
    media_type?: true
    permalink?: true
    timestamp?: true
    ig_business_account_id?: true
    page_id?: true
    ig_business_account_username?: true
    media_product_type?: true
    ig_media_id?: true
    image_url_l?: true
    image_url_m?: true
    _all?: true
  }

  export type IG_MediaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IG_Media to aggregate.
     */
    where?: IG_MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IG_Medias to fetch.
     */
    orderBy?: IG_MediaOrderByWithRelationInput | IG_MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IG_MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IG_Medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IG_Medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned IG_Medias
    **/
    _count?: true | IG_MediaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IG_MediaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IG_MediaMaxAggregateInputType
  }

  export type GetIG_MediaAggregateType<T extends IG_MediaAggregateArgs> = {
        [P in keyof T & keyof AggregateIG_Media]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIG_Media[P]>
      : GetScalarType<T[P], AggregateIG_Media[P]>
  }




  export type IG_MediaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IG_MediaWhereInput
    orderBy?: IG_MediaOrderByWithAggregationInput | IG_MediaOrderByWithAggregationInput[]
    by: IG_MediaScalarFieldEnum[] | IG_MediaScalarFieldEnum
    having?: IG_MediaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IG_MediaCountAggregateInputType | true
    _min?: IG_MediaMinAggregateInputType
    _max?: IG_MediaMaxAggregateInputType
  }

  export type IG_MediaGroupByOutputType = {
    id: string
    created_at: Date
    caption: string | null
    media_type: string | null
    permalink: string | null
    timestamp: Date | null
    ig_business_account_id: string | null
    page_id: string | null
    ig_business_account_username: string | null
    media_product_type: string | null
    ig_media_id: string | null
    image_url_l: string | null
    image_url_m: string | null
    _count: IG_MediaCountAggregateOutputType | null
    _min: IG_MediaMinAggregateOutputType | null
    _max: IG_MediaMaxAggregateOutputType | null
  }

  type GetIG_MediaGroupByPayload<T extends IG_MediaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IG_MediaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IG_MediaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IG_MediaGroupByOutputType[P]>
            : GetScalarType<T[P], IG_MediaGroupByOutputType[P]>
        }
      >
    >


  export type IG_MediaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    caption?: boolean
    media_type?: boolean
    permalink?: boolean
    timestamp?: boolean
    ig_business_account_id?: boolean
    page_id?: boolean
    ig_business_account_username?: boolean
    media_product_type?: boolean
    ig_media_id?: boolean
    image_url_l?: boolean
    image_url_m?: boolean
  }, ExtArgs["result"]["iG_Media"]>

  export type IG_MediaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    caption?: boolean
    media_type?: boolean
    permalink?: boolean
    timestamp?: boolean
    ig_business_account_id?: boolean
    page_id?: boolean
    ig_business_account_username?: boolean
    media_product_type?: boolean
    ig_media_id?: boolean
    image_url_l?: boolean
    image_url_m?: boolean
  }, ExtArgs["result"]["iG_Media"]>

  export type IG_MediaSelectScalar = {
    id?: boolean
    created_at?: boolean
    caption?: boolean
    media_type?: boolean
    permalink?: boolean
    timestamp?: boolean
    ig_business_account_id?: boolean
    page_id?: boolean
    ig_business_account_username?: boolean
    media_product_type?: boolean
    ig_media_id?: boolean
    image_url_l?: boolean
    image_url_m?: boolean
  }


  export type $IG_MediaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "IG_Media"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      caption: string | null
      media_type: string | null
      permalink: string | null
      timestamp: Date | null
      ig_business_account_id: string | null
      page_id: string | null
      ig_business_account_username: string | null
      media_product_type: string | null
      ig_media_id: string | null
      image_url_l: string | null
      image_url_m: string | null
    }, ExtArgs["result"]["iG_Media"]>
    composites: {}
  }

  type IG_MediaGetPayload<S extends boolean | null | undefined | IG_MediaDefaultArgs> = $Result.GetResult<Prisma.$IG_MediaPayload, S>

  type IG_MediaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<IG_MediaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: IG_MediaCountAggregateInputType | true
    }

  export interface IG_MediaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['IG_Media'], meta: { name: 'IG_Media' } }
    /**
     * Find zero or one IG_Media that matches the filter.
     * @param {IG_MediaFindUniqueArgs} args - Arguments to find a IG_Media
     * @example
     * // Get one IG_Media
     * const iG_Media = await prisma.iG_Media.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends IG_MediaFindUniqueArgs>(args: SelectSubset<T, IG_MediaFindUniqueArgs<ExtArgs>>): Prisma__IG_MediaClient<$Result.GetResult<Prisma.$IG_MediaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one IG_Media that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {IG_MediaFindUniqueOrThrowArgs} args - Arguments to find a IG_Media
     * @example
     * // Get one IG_Media
     * const iG_Media = await prisma.iG_Media.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends IG_MediaFindUniqueOrThrowArgs>(args: SelectSubset<T, IG_MediaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__IG_MediaClient<$Result.GetResult<Prisma.$IG_MediaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first IG_Media that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IG_MediaFindFirstArgs} args - Arguments to find a IG_Media
     * @example
     * // Get one IG_Media
     * const iG_Media = await prisma.iG_Media.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends IG_MediaFindFirstArgs>(args?: SelectSubset<T, IG_MediaFindFirstArgs<ExtArgs>>): Prisma__IG_MediaClient<$Result.GetResult<Prisma.$IG_MediaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first IG_Media that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IG_MediaFindFirstOrThrowArgs} args - Arguments to find a IG_Media
     * @example
     * // Get one IG_Media
     * const iG_Media = await prisma.iG_Media.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends IG_MediaFindFirstOrThrowArgs>(args?: SelectSubset<T, IG_MediaFindFirstOrThrowArgs<ExtArgs>>): Prisma__IG_MediaClient<$Result.GetResult<Prisma.$IG_MediaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more IG_Medias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IG_MediaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all IG_Medias
     * const iG_Medias = await prisma.iG_Media.findMany()
     * 
     * // Get first 10 IG_Medias
     * const iG_Medias = await prisma.iG_Media.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const iG_MediaWithIdOnly = await prisma.iG_Media.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends IG_MediaFindManyArgs>(args?: SelectSubset<T, IG_MediaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IG_MediaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a IG_Media.
     * @param {IG_MediaCreateArgs} args - Arguments to create a IG_Media.
     * @example
     * // Create one IG_Media
     * const IG_Media = await prisma.iG_Media.create({
     *   data: {
     *     // ... data to create a IG_Media
     *   }
     * })
     * 
     */
    create<T extends IG_MediaCreateArgs>(args: SelectSubset<T, IG_MediaCreateArgs<ExtArgs>>): Prisma__IG_MediaClient<$Result.GetResult<Prisma.$IG_MediaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many IG_Medias.
     * @param {IG_MediaCreateManyArgs} args - Arguments to create many IG_Medias.
     * @example
     * // Create many IG_Medias
     * const iG_Media = await prisma.iG_Media.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends IG_MediaCreateManyArgs>(args?: SelectSubset<T, IG_MediaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many IG_Medias and returns the data saved in the database.
     * @param {IG_MediaCreateManyAndReturnArgs} args - Arguments to create many IG_Medias.
     * @example
     * // Create many IG_Medias
     * const iG_Media = await prisma.iG_Media.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many IG_Medias and only return the `id`
     * const iG_MediaWithIdOnly = await prisma.iG_Media.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends IG_MediaCreateManyAndReturnArgs>(args?: SelectSubset<T, IG_MediaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IG_MediaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a IG_Media.
     * @param {IG_MediaDeleteArgs} args - Arguments to delete one IG_Media.
     * @example
     * // Delete one IG_Media
     * const IG_Media = await prisma.iG_Media.delete({
     *   where: {
     *     // ... filter to delete one IG_Media
     *   }
     * })
     * 
     */
    delete<T extends IG_MediaDeleteArgs>(args: SelectSubset<T, IG_MediaDeleteArgs<ExtArgs>>): Prisma__IG_MediaClient<$Result.GetResult<Prisma.$IG_MediaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one IG_Media.
     * @param {IG_MediaUpdateArgs} args - Arguments to update one IG_Media.
     * @example
     * // Update one IG_Media
     * const iG_Media = await prisma.iG_Media.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends IG_MediaUpdateArgs>(args: SelectSubset<T, IG_MediaUpdateArgs<ExtArgs>>): Prisma__IG_MediaClient<$Result.GetResult<Prisma.$IG_MediaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more IG_Medias.
     * @param {IG_MediaDeleteManyArgs} args - Arguments to filter IG_Medias to delete.
     * @example
     * // Delete a few IG_Medias
     * const { count } = await prisma.iG_Media.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends IG_MediaDeleteManyArgs>(args?: SelectSubset<T, IG_MediaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more IG_Medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IG_MediaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many IG_Medias
     * const iG_Media = await prisma.iG_Media.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends IG_MediaUpdateManyArgs>(args: SelectSubset<T, IG_MediaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one IG_Media.
     * @param {IG_MediaUpsertArgs} args - Arguments to update or create a IG_Media.
     * @example
     * // Update or create a IG_Media
     * const iG_Media = await prisma.iG_Media.upsert({
     *   create: {
     *     // ... data to create a IG_Media
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the IG_Media we want to update
     *   }
     * })
     */
    upsert<T extends IG_MediaUpsertArgs>(args: SelectSubset<T, IG_MediaUpsertArgs<ExtArgs>>): Prisma__IG_MediaClient<$Result.GetResult<Prisma.$IG_MediaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of IG_Medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IG_MediaCountArgs} args - Arguments to filter IG_Medias to count.
     * @example
     * // Count the number of IG_Medias
     * const count = await prisma.iG_Media.count({
     *   where: {
     *     // ... the filter for the IG_Medias we want to count
     *   }
     * })
    **/
    count<T extends IG_MediaCountArgs>(
      args?: Subset<T, IG_MediaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IG_MediaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a IG_Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IG_MediaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IG_MediaAggregateArgs>(args: Subset<T, IG_MediaAggregateArgs>): Prisma.PrismaPromise<GetIG_MediaAggregateType<T>>

    /**
     * Group by IG_Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IG_MediaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IG_MediaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IG_MediaGroupByArgs['orderBy'] }
        : { orderBy?: IG_MediaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IG_MediaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIG_MediaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the IG_Media model
   */
  readonly fields: IG_MediaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for IG_Media.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IG_MediaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the IG_Media model
   */ 
  interface IG_MediaFieldRefs {
    readonly id: FieldRef<"IG_Media", 'String'>
    readonly created_at: FieldRef<"IG_Media", 'DateTime'>
    readonly caption: FieldRef<"IG_Media", 'String'>
    readonly media_type: FieldRef<"IG_Media", 'String'>
    readonly permalink: FieldRef<"IG_Media", 'String'>
    readonly timestamp: FieldRef<"IG_Media", 'DateTime'>
    readonly ig_business_account_id: FieldRef<"IG_Media", 'String'>
    readonly page_id: FieldRef<"IG_Media", 'String'>
    readonly ig_business_account_username: FieldRef<"IG_Media", 'String'>
    readonly media_product_type: FieldRef<"IG_Media", 'String'>
    readonly ig_media_id: FieldRef<"IG_Media", 'String'>
    readonly image_url_l: FieldRef<"IG_Media", 'String'>
    readonly image_url_m: FieldRef<"IG_Media", 'String'>
  }
    

  // Custom InputTypes
  /**
   * IG_Media findUnique
   */
  export type IG_MediaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IG_Media
     */
    select?: IG_MediaSelect<ExtArgs> | null
    /**
     * Filter, which IG_Media to fetch.
     */
    where: IG_MediaWhereUniqueInput
  }

  /**
   * IG_Media findUniqueOrThrow
   */
  export type IG_MediaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IG_Media
     */
    select?: IG_MediaSelect<ExtArgs> | null
    /**
     * Filter, which IG_Media to fetch.
     */
    where: IG_MediaWhereUniqueInput
  }

  /**
   * IG_Media findFirst
   */
  export type IG_MediaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IG_Media
     */
    select?: IG_MediaSelect<ExtArgs> | null
    /**
     * Filter, which IG_Media to fetch.
     */
    where?: IG_MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IG_Medias to fetch.
     */
    orderBy?: IG_MediaOrderByWithRelationInput | IG_MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IG_Medias.
     */
    cursor?: IG_MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IG_Medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IG_Medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IG_Medias.
     */
    distinct?: IG_MediaScalarFieldEnum | IG_MediaScalarFieldEnum[]
  }

  /**
   * IG_Media findFirstOrThrow
   */
  export type IG_MediaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IG_Media
     */
    select?: IG_MediaSelect<ExtArgs> | null
    /**
     * Filter, which IG_Media to fetch.
     */
    where?: IG_MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IG_Medias to fetch.
     */
    orderBy?: IG_MediaOrderByWithRelationInput | IG_MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IG_Medias.
     */
    cursor?: IG_MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IG_Medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IG_Medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IG_Medias.
     */
    distinct?: IG_MediaScalarFieldEnum | IG_MediaScalarFieldEnum[]
  }

  /**
   * IG_Media findMany
   */
  export type IG_MediaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IG_Media
     */
    select?: IG_MediaSelect<ExtArgs> | null
    /**
     * Filter, which IG_Medias to fetch.
     */
    where?: IG_MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IG_Medias to fetch.
     */
    orderBy?: IG_MediaOrderByWithRelationInput | IG_MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing IG_Medias.
     */
    cursor?: IG_MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IG_Medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IG_Medias.
     */
    skip?: number
    distinct?: IG_MediaScalarFieldEnum | IG_MediaScalarFieldEnum[]
  }

  /**
   * IG_Media create
   */
  export type IG_MediaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IG_Media
     */
    select?: IG_MediaSelect<ExtArgs> | null
    /**
     * The data needed to create a IG_Media.
     */
    data?: XOR<IG_MediaCreateInput, IG_MediaUncheckedCreateInput>
  }

  /**
   * IG_Media createMany
   */
  export type IG_MediaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many IG_Medias.
     */
    data: IG_MediaCreateManyInput | IG_MediaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * IG_Media createManyAndReturn
   */
  export type IG_MediaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IG_Media
     */
    select?: IG_MediaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many IG_Medias.
     */
    data: IG_MediaCreateManyInput | IG_MediaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * IG_Media update
   */
  export type IG_MediaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IG_Media
     */
    select?: IG_MediaSelect<ExtArgs> | null
    /**
     * The data needed to update a IG_Media.
     */
    data: XOR<IG_MediaUpdateInput, IG_MediaUncheckedUpdateInput>
    /**
     * Choose, which IG_Media to update.
     */
    where: IG_MediaWhereUniqueInput
  }

  /**
   * IG_Media updateMany
   */
  export type IG_MediaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update IG_Medias.
     */
    data: XOR<IG_MediaUpdateManyMutationInput, IG_MediaUncheckedUpdateManyInput>
    /**
     * Filter which IG_Medias to update
     */
    where?: IG_MediaWhereInput
  }

  /**
   * IG_Media upsert
   */
  export type IG_MediaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IG_Media
     */
    select?: IG_MediaSelect<ExtArgs> | null
    /**
     * The filter to search for the IG_Media to update in case it exists.
     */
    where: IG_MediaWhereUniqueInput
    /**
     * In case the IG_Media found by the `where` argument doesn't exist, create a new IG_Media with this data.
     */
    create: XOR<IG_MediaCreateInput, IG_MediaUncheckedCreateInput>
    /**
     * In case the IG_Media was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IG_MediaUpdateInput, IG_MediaUncheckedUpdateInput>
  }

  /**
   * IG_Media delete
   */
  export type IG_MediaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IG_Media
     */
    select?: IG_MediaSelect<ExtArgs> | null
    /**
     * Filter which IG_Media to delete.
     */
    where: IG_MediaWhereUniqueInput
  }

  /**
   * IG_Media deleteMany
   */
  export type IG_MediaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IG_Medias to delete
     */
    where?: IG_MediaWhereInput
  }

  /**
   * IG_Media without action
   */
  export type IG_MediaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IG_Media
     */
    select?: IG_MediaSelect<ExtArgs> | null
  }


  /**
   * Model Scraped_recipes
   */

  export type AggregateScraped_recipes = {
    _count: Scraped_recipesCountAggregateOutputType | null
    _min: Scraped_recipesMinAggregateOutputType | null
    _max: Scraped_recipesMaxAggregateOutputType | null
  }

  export type Scraped_recipesMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    url: string | null
    title: string | null
    image: string | null
    servings: string | null
    creator: string | null
  }

  export type Scraped_recipesMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    url: string | null
    title: string | null
    image: string | null
    servings: string | null
    creator: string | null
  }

  export type Scraped_recipesCountAggregateOutputType = {
    id: number
    created_at: number
    url: number
    title: number
    image: number
    content: number
    times: number
    servings: number
    ingredients: number
    instructions: number
    creator: number
    _all: number
  }


  export type Scraped_recipesMinAggregateInputType = {
    id?: true
    created_at?: true
    url?: true
    title?: true
    image?: true
    servings?: true
    creator?: true
  }

  export type Scraped_recipesMaxAggregateInputType = {
    id?: true
    created_at?: true
    url?: true
    title?: true
    image?: true
    servings?: true
    creator?: true
  }

  export type Scraped_recipesCountAggregateInputType = {
    id?: true
    created_at?: true
    url?: true
    title?: true
    image?: true
    content?: true
    times?: true
    servings?: true
    ingredients?: true
    instructions?: true
    creator?: true
    _all?: true
  }

  export type Scraped_recipesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Scraped_recipes to aggregate.
     */
    where?: Scraped_recipesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scraped_recipes to fetch.
     */
    orderBy?: Scraped_recipesOrderByWithRelationInput | Scraped_recipesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Scraped_recipesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scraped_recipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scraped_recipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Scraped_recipes
    **/
    _count?: true | Scraped_recipesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Scraped_recipesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Scraped_recipesMaxAggregateInputType
  }

  export type GetScraped_recipesAggregateType<T extends Scraped_recipesAggregateArgs> = {
        [P in keyof T & keyof AggregateScraped_recipes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateScraped_recipes[P]>
      : GetScalarType<T[P], AggregateScraped_recipes[P]>
  }




  export type Scraped_recipesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Scraped_recipesWhereInput
    orderBy?: Scraped_recipesOrderByWithAggregationInput | Scraped_recipesOrderByWithAggregationInput[]
    by: Scraped_recipesScalarFieldEnum[] | Scraped_recipesScalarFieldEnum
    having?: Scraped_recipesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Scraped_recipesCountAggregateInputType | true
    _min?: Scraped_recipesMinAggregateInputType
    _max?: Scraped_recipesMaxAggregateInputType
  }

  export type Scraped_recipesGroupByOutputType = {
    id: string
    created_at: Date
    url: string | null
    title: string | null
    image: string | null
    content: JsonValue | null
    times: JsonValue | null
    servings: string | null
    ingredients: JsonValue | null
    instructions: JsonValue | null
    creator: string | null
    _count: Scraped_recipesCountAggregateOutputType | null
    _min: Scraped_recipesMinAggregateOutputType | null
    _max: Scraped_recipesMaxAggregateOutputType | null
  }

  type GetScraped_recipesGroupByPayload<T extends Scraped_recipesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Scraped_recipesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Scraped_recipesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Scraped_recipesGroupByOutputType[P]>
            : GetScalarType<T[P], Scraped_recipesGroupByOutputType[P]>
        }
      >
    >


  export type Scraped_recipesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    url?: boolean
    title?: boolean
    image?: boolean
    content?: boolean
    times?: boolean
    servings?: boolean
    ingredients?: boolean
    instructions?: boolean
    creator?: boolean
  }, ExtArgs["result"]["scraped_recipes"]>

  export type Scraped_recipesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    url?: boolean
    title?: boolean
    image?: boolean
    content?: boolean
    times?: boolean
    servings?: boolean
    ingredients?: boolean
    instructions?: boolean
    creator?: boolean
  }, ExtArgs["result"]["scraped_recipes"]>

  export type Scraped_recipesSelectScalar = {
    id?: boolean
    created_at?: boolean
    url?: boolean
    title?: boolean
    image?: boolean
    content?: boolean
    times?: boolean
    servings?: boolean
    ingredients?: boolean
    instructions?: boolean
    creator?: boolean
  }


  export type $Scraped_recipesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Scraped_recipes"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      url: string | null
      title: string | null
      image: string | null
      content: Prisma.JsonValue | null
      times: Prisma.JsonValue | null
      servings: string | null
      ingredients: Prisma.JsonValue | null
      instructions: Prisma.JsonValue | null
      creator: string | null
    }, ExtArgs["result"]["scraped_recipes"]>
    composites: {}
  }

  type Scraped_recipesGetPayload<S extends boolean | null | undefined | Scraped_recipesDefaultArgs> = $Result.GetResult<Prisma.$Scraped_recipesPayload, S>

  type Scraped_recipesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Scraped_recipesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Scraped_recipesCountAggregateInputType | true
    }

  export interface Scraped_recipesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Scraped_recipes'], meta: { name: 'Scraped_recipes' } }
    /**
     * Find zero or one Scraped_recipes that matches the filter.
     * @param {Scraped_recipesFindUniqueArgs} args - Arguments to find a Scraped_recipes
     * @example
     * // Get one Scraped_recipes
     * const scraped_recipes = await prisma.scraped_recipes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Scraped_recipesFindUniqueArgs>(args: SelectSubset<T, Scraped_recipesFindUniqueArgs<ExtArgs>>): Prisma__Scraped_recipesClient<$Result.GetResult<Prisma.$Scraped_recipesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Scraped_recipes that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Scraped_recipesFindUniqueOrThrowArgs} args - Arguments to find a Scraped_recipes
     * @example
     * // Get one Scraped_recipes
     * const scraped_recipes = await prisma.scraped_recipes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Scraped_recipesFindUniqueOrThrowArgs>(args: SelectSubset<T, Scraped_recipesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Scraped_recipesClient<$Result.GetResult<Prisma.$Scraped_recipesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Scraped_recipes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Scraped_recipesFindFirstArgs} args - Arguments to find a Scraped_recipes
     * @example
     * // Get one Scraped_recipes
     * const scraped_recipes = await prisma.scraped_recipes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Scraped_recipesFindFirstArgs>(args?: SelectSubset<T, Scraped_recipesFindFirstArgs<ExtArgs>>): Prisma__Scraped_recipesClient<$Result.GetResult<Prisma.$Scraped_recipesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Scraped_recipes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Scraped_recipesFindFirstOrThrowArgs} args - Arguments to find a Scraped_recipes
     * @example
     * // Get one Scraped_recipes
     * const scraped_recipes = await prisma.scraped_recipes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Scraped_recipesFindFirstOrThrowArgs>(args?: SelectSubset<T, Scraped_recipesFindFirstOrThrowArgs<ExtArgs>>): Prisma__Scraped_recipesClient<$Result.GetResult<Prisma.$Scraped_recipesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Scraped_recipes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Scraped_recipesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Scraped_recipes
     * const scraped_recipes = await prisma.scraped_recipes.findMany()
     * 
     * // Get first 10 Scraped_recipes
     * const scraped_recipes = await prisma.scraped_recipes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const scraped_recipesWithIdOnly = await prisma.scraped_recipes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Scraped_recipesFindManyArgs>(args?: SelectSubset<T, Scraped_recipesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Scraped_recipesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Scraped_recipes.
     * @param {Scraped_recipesCreateArgs} args - Arguments to create a Scraped_recipes.
     * @example
     * // Create one Scraped_recipes
     * const Scraped_recipes = await prisma.scraped_recipes.create({
     *   data: {
     *     // ... data to create a Scraped_recipes
     *   }
     * })
     * 
     */
    create<T extends Scraped_recipesCreateArgs>(args: SelectSubset<T, Scraped_recipesCreateArgs<ExtArgs>>): Prisma__Scraped_recipesClient<$Result.GetResult<Prisma.$Scraped_recipesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Scraped_recipes.
     * @param {Scraped_recipesCreateManyArgs} args - Arguments to create many Scraped_recipes.
     * @example
     * // Create many Scraped_recipes
     * const scraped_recipes = await prisma.scraped_recipes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Scraped_recipesCreateManyArgs>(args?: SelectSubset<T, Scraped_recipesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Scraped_recipes and returns the data saved in the database.
     * @param {Scraped_recipesCreateManyAndReturnArgs} args - Arguments to create many Scraped_recipes.
     * @example
     * // Create many Scraped_recipes
     * const scraped_recipes = await prisma.scraped_recipes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Scraped_recipes and only return the `id`
     * const scraped_recipesWithIdOnly = await prisma.scraped_recipes.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Scraped_recipesCreateManyAndReturnArgs>(args?: SelectSubset<T, Scraped_recipesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Scraped_recipesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Scraped_recipes.
     * @param {Scraped_recipesDeleteArgs} args - Arguments to delete one Scraped_recipes.
     * @example
     * // Delete one Scraped_recipes
     * const Scraped_recipes = await prisma.scraped_recipes.delete({
     *   where: {
     *     // ... filter to delete one Scraped_recipes
     *   }
     * })
     * 
     */
    delete<T extends Scraped_recipesDeleteArgs>(args: SelectSubset<T, Scraped_recipesDeleteArgs<ExtArgs>>): Prisma__Scraped_recipesClient<$Result.GetResult<Prisma.$Scraped_recipesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Scraped_recipes.
     * @param {Scraped_recipesUpdateArgs} args - Arguments to update one Scraped_recipes.
     * @example
     * // Update one Scraped_recipes
     * const scraped_recipes = await prisma.scraped_recipes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Scraped_recipesUpdateArgs>(args: SelectSubset<T, Scraped_recipesUpdateArgs<ExtArgs>>): Prisma__Scraped_recipesClient<$Result.GetResult<Prisma.$Scraped_recipesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Scraped_recipes.
     * @param {Scraped_recipesDeleteManyArgs} args - Arguments to filter Scraped_recipes to delete.
     * @example
     * // Delete a few Scraped_recipes
     * const { count } = await prisma.scraped_recipes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Scraped_recipesDeleteManyArgs>(args?: SelectSubset<T, Scraped_recipesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Scraped_recipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Scraped_recipesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Scraped_recipes
     * const scraped_recipes = await prisma.scraped_recipes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Scraped_recipesUpdateManyArgs>(args: SelectSubset<T, Scraped_recipesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Scraped_recipes.
     * @param {Scraped_recipesUpsertArgs} args - Arguments to update or create a Scraped_recipes.
     * @example
     * // Update or create a Scraped_recipes
     * const scraped_recipes = await prisma.scraped_recipes.upsert({
     *   create: {
     *     // ... data to create a Scraped_recipes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Scraped_recipes we want to update
     *   }
     * })
     */
    upsert<T extends Scraped_recipesUpsertArgs>(args: SelectSubset<T, Scraped_recipesUpsertArgs<ExtArgs>>): Prisma__Scraped_recipesClient<$Result.GetResult<Prisma.$Scraped_recipesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Scraped_recipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Scraped_recipesCountArgs} args - Arguments to filter Scraped_recipes to count.
     * @example
     * // Count the number of Scraped_recipes
     * const count = await prisma.scraped_recipes.count({
     *   where: {
     *     // ... the filter for the Scraped_recipes we want to count
     *   }
     * })
    **/
    count<T extends Scraped_recipesCountArgs>(
      args?: Subset<T, Scraped_recipesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Scraped_recipesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Scraped_recipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Scraped_recipesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Scraped_recipesAggregateArgs>(args: Subset<T, Scraped_recipesAggregateArgs>): Prisma.PrismaPromise<GetScraped_recipesAggregateType<T>>

    /**
     * Group by Scraped_recipes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Scraped_recipesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Scraped_recipesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Scraped_recipesGroupByArgs['orderBy'] }
        : { orderBy?: Scraped_recipesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Scraped_recipesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetScraped_recipesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Scraped_recipes model
   */
  readonly fields: Scraped_recipesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Scraped_recipes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Scraped_recipesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Scraped_recipes model
   */ 
  interface Scraped_recipesFieldRefs {
    readonly id: FieldRef<"Scraped_recipes", 'String'>
    readonly created_at: FieldRef<"Scraped_recipes", 'DateTime'>
    readonly url: FieldRef<"Scraped_recipes", 'String'>
    readonly title: FieldRef<"Scraped_recipes", 'String'>
    readonly image: FieldRef<"Scraped_recipes", 'String'>
    readonly content: FieldRef<"Scraped_recipes", 'Json'>
    readonly times: FieldRef<"Scraped_recipes", 'Json'>
    readonly servings: FieldRef<"Scraped_recipes", 'String'>
    readonly ingredients: FieldRef<"Scraped_recipes", 'Json'>
    readonly instructions: FieldRef<"Scraped_recipes", 'Json'>
    readonly creator: FieldRef<"Scraped_recipes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Scraped_recipes findUnique
   */
  export type Scraped_recipesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scraped_recipes
     */
    select?: Scraped_recipesSelect<ExtArgs> | null
    /**
     * Filter, which Scraped_recipes to fetch.
     */
    where: Scraped_recipesWhereUniqueInput
  }

  /**
   * Scraped_recipes findUniqueOrThrow
   */
  export type Scraped_recipesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scraped_recipes
     */
    select?: Scraped_recipesSelect<ExtArgs> | null
    /**
     * Filter, which Scraped_recipes to fetch.
     */
    where: Scraped_recipesWhereUniqueInput
  }

  /**
   * Scraped_recipes findFirst
   */
  export type Scraped_recipesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scraped_recipes
     */
    select?: Scraped_recipesSelect<ExtArgs> | null
    /**
     * Filter, which Scraped_recipes to fetch.
     */
    where?: Scraped_recipesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scraped_recipes to fetch.
     */
    orderBy?: Scraped_recipesOrderByWithRelationInput | Scraped_recipesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Scraped_recipes.
     */
    cursor?: Scraped_recipesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scraped_recipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scraped_recipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Scraped_recipes.
     */
    distinct?: Scraped_recipesScalarFieldEnum | Scraped_recipesScalarFieldEnum[]
  }

  /**
   * Scraped_recipes findFirstOrThrow
   */
  export type Scraped_recipesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scraped_recipes
     */
    select?: Scraped_recipesSelect<ExtArgs> | null
    /**
     * Filter, which Scraped_recipes to fetch.
     */
    where?: Scraped_recipesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scraped_recipes to fetch.
     */
    orderBy?: Scraped_recipesOrderByWithRelationInput | Scraped_recipesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Scraped_recipes.
     */
    cursor?: Scraped_recipesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scraped_recipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scraped_recipes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Scraped_recipes.
     */
    distinct?: Scraped_recipesScalarFieldEnum | Scraped_recipesScalarFieldEnum[]
  }

  /**
   * Scraped_recipes findMany
   */
  export type Scraped_recipesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scraped_recipes
     */
    select?: Scraped_recipesSelect<ExtArgs> | null
    /**
     * Filter, which Scraped_recipes to fetch.
     */
    where?: Scraped_recipesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scraped_recipes to fetch.
     */
    orderBy?: Scraped_recipesOrderByWithRelationInput | Scraped_recipesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Scraped_recipes.
     */
    cursor?: Scraped_recipesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scraped_recipes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scraped_recipes.
     */
    skip?: number
    distinct?: Scraped_recipesScalarFieldEnum | Scraped_recipesScalarFieldEnum[]
  }

  /**
   * Scraped_recipes create
   */
  export type Scraped_recipesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scraped_recipes
     */
    select?: Scraped_recipesSelect<ExtArgs> | null
    /**
     * The data needed to create a Scraped_recipes.
     */
    data?: XOR<Scraped_recipesCreateInput, Scraped_recipesUncheckedCreateInput>
  }

  /**
   * Scraped_recipes createMany
   */
  export type Scraped_recipesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Scraped_recipes.
     */
    data: Scraped_recipesCreateManyInput | Scraped_recipesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Scraped_recipes createManyAndReturn
   */
  export type Scraped_recipesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scraped_recipes
     */
    select?: Scraped_recipesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Scraped_recipes.
     */
    data: Scraped_recipesCreateManyInput | Scraped_recipesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Scraped_recipes update
   */
  export type Scraped_recipesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scraped_recipes
     */
    select?: Scraped_recipesSelect<ExtArgs> | null
    /**
     * The data needed to update a Scraped_recipes.
     */
    data: XOR<Scraped_recipesUpdateInput, Scraped_recipesUncheckedUpdateInput>
    /**
     * Choose, which Scraped_recipes to update.
     */
    where: Scraped_recipesWhereUniqueInput
  }

  /**
   * Scraped_recipes updateMany
   */
  export type Scraped_recipesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Scraped_recipes.
     */
    data: XOR<Scraped_recipesUpdateManyMutationInput, Scraped_recipesUncheckedUpdateManyInput>
    /**
     * Filter which Scraped_recipes to update
     */
    where?: Scraped_recipesWhereInput
  }

  /**
   * Scraped_recipes upsert
   */
  export type Scraped_recipesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scraped_recipes
     */
    select?: Scraped_recipesSelect<ExtArgs> | null
    /**
     * The filter to search for the Scraped_recipes to update in case it exists.
     */
    where: Scraped_recipesWhereUniqueInput
    /**
     * In case the Scraped_recipes found by the `where` argument doesn't exist, create a new Scraped_recipes with this data.
     */
    create: XOR<Scraped_recipesCreateInput, Scraped_recipesUncheckedCreateInput>
    /**
     * In case the Scraped_recipes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Scraped_recipesUpdateInput, Scraped_recipesUncheckedUpdateInput>
  }

  /**
   * Scraped_recipes delete
   */
  export type Scraped_recipesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scraped_recipes
     */
    select?: Scraped_recipesSelect<ExtArgs> | null
    /**
     * Filter which Scraped_recipes to delete.
     */
    where: Scraped_recipesWhereUniqueInput
  }

  /**
   * Scraped_recipes deleteMany
   */
  export type Scraped_recipesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Scraped_recipes to delete
     */
    where?: Scraped_recipesWhereInput
  }

  /**
   * Scraped_recipes without action
   */
  export type Scraped_recipesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scraped_recipes
     */
    select?: Scraped_recipesSelect<ExtArgs> | null
  }


  /**
   * Model Users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    created_at: Date | null
    email: string | null
    password: string | null
    name: string | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    created_at: Date | null
    email: string | null
    password: string | null
    name: string | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    created_at: number
    email: number
    password: number
    name: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    id?: true
    created_at?: true
    email?: true
    password?: true
    name?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    created_at?: true
    email?: true
    password?: true
    name?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    created_at?: true
    email?: true
    password?: true
    name?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to aggregate.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersWhereInput
    orderBy?: UsersOrderByWithAggregationInput | UsersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: UsersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    created_at: Date
    email: string
    password: string
    name: string
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type UsersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
  }, ExtArgs["result"]["users"]>

  export type UsersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
  }, ExtArgs["result"]["users"]>

  export type UsersSelectScalar = {
    id?: boolean
    created_at?: boolean
    email?: boolean
    password?: boolean
    name?: boolean
  }


  export type $UsersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Users"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      created_at: Date
      email: string
      password: string
      name: string
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type UsersGetPayload<S extends boolean | null | undefined | UsersDefaultArgs> = $Result.GetResult<Prisma.$UsersPayload, S>

  type UsersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface UsersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Users'], meta: { name: 'Users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {UsersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsersFindUniqueArgs>(args: SelectSubset<T, UsersFindUniqueArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsersFindUniqueOrThrowArgs>(args: SelectSubset<T, UsersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsersFindFirstArgs>(args?: SelectSubset<T, UsersFindFirstArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsersFindFirstOrThrowArgs>(args?: SelectSubset<T, UsersFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsersFindManyArgs>(args?: SelectSubset<T, UsersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Users.
     * @param {UsersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends UsersCreateArgs>(args: SelectSubset<T, UsersCreateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UsersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsersCreateManyArgs>(args?: SelectSubset<T, UsersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UsersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsersCreateManyAndReturnArgs>(args?: SelectSubset<T, UsersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Users.
     * @param {UsersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends UsersDeleteArgs>(args: SelectSubset<T, UsersDeleteArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Users.
     * @param {UsersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsersUpdateArgs>(args: SelectSubset<T, UsersUpdateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UsersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsersDeleteManyArgs>(args?: SelectSubset<T, UsersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsersUpdateManyArgs>(args: SelectSubset<T, UsersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {UsersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends UsersUpsertArgs>(args: SelectSubset<T, UsersUpsertArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UsersCountArgs>(
      args?: Subset<T, UsersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Users model
   */
  readonly fields: UsersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Users model
   */ 
  interface UsersFieldRefs {
    readonly id: FieldRef<"Users", 'String'>
    readonly created_at: FieldRef<"Users", 'DateTime'>
    readonly email: FieldRef<"Users", 'String'>
    readonly password: FieldRef<"Users", 'String'>
    readonly name: FieldRef<"Users", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Users findUnique
   */
  export type UsersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findUniqueOrThrow
   */
  export type UsersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findFirst
   */
  export type UsersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findFirstOrThrow
   */
  export type UsersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findMany
   */
  export type UsersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users create
   */
  export type UsersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * The data needed to create a Users.
     */
    data: XOR<UsersCreateInput, UsersUncheckedCreateInput>
  }

  /**
   * Users createMany
   */
  export type UsersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users createManyAndReturn
   */
  export type UsersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users update
   */
  export type UsersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * The data needed to update a Users.
     */
    data: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
    /**
     * Choose, which Users to update.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users updateMany
   */
  export type UsersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
  }

  /**
   * Users upsert
   */
  export type UsersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * The filter to search for the Users to update in case it exists.
     */
    where: UsersWhereUniqueInput
    /**
     * In case the Users found by the `where` argument doesn't exist, create a new Users with this data.
     */
    create: XOR<UsersCreateInput, UsersUncheckedCreateInput>
    /**
     * In case the Users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
  }

  /**
   * Users delete
   */
  export type UsersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Filter which Users to delete.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users deleteMany
   */
  export type UsersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UsersWhereInput
  }

  /**
   * Users without action
   */
  export type UsersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CreatorsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    name: 'name',
    access_token_expiration: 'access_token_expiration',
    fb_page_id: 'fb_page_id',
    ig_business_account_id: 'ig_business_account_id',
    ig_business_account_username: 'ig_business_account_username',
    fb_user_access_token: 'fb_user_access_token'
  };

  export type CreatorsScalarFieldEnum = (typeof CreatorsScalarFieldEnum)[keyof typeof CreatorsScalarFieldEnum]


  export const IG_MediaScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    caption: 'caption',
    media_type: 'media_type',
    permalink: 'permalink',
    timestamp: 'timestamp',
    ig_business_account_id: 'ig_business_account_id',
    page_id: 'page_id',
    ig_business_account_username: 'ig_business_account_username',
    media_product_type: 'media_product_type',
    ig_media_id: 'ig_media_id',
    image_url_l: 'image_url_l',
    image_url_m: 'image_url_m'
  };

  export type IG_MediaScalarFieldEnum = (typeof IG_MediaScalarFieldEnum)[keyof typeof IG_MediaScalarFieldEnum]


  export const Scraped_recipesScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    url: 'url',
    title: 'title',
    image: 'image',
    content: 'content',
    times: 'times',
    servings: 'servings',
    ingredients: 'ingredients',
    instructions: 'instructions',
    creator: 'creator'
  };

  export type Scraped_recipesScalarFieldEnum = (typeof Scraped_recipesScalarFieldEnum)[keyof typeof Scraped_recipesScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    email: 'email',
    password: 'password',
    name: 'name'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    
  /**
   * Deep Input Types
   */


  export type CreatorsWhereInput = {
    AND?: CreatorsWhereInput | CreatorsWhereInput[]
    OR?: CreatorsWhereInput[]
    NOT?: CreatorsWhereInput | CreatorsWhereInput[]
    id?: UuidFilter<"Creators"> | string
    created_at?: DateTimeFilter<"Creators"> | Date | string
    name?: StringFilter<"Creators"> | string
    access_token_expiration?: DateTimeNullableFilter<"Creators"> | Date | string | null
    fb_page_id?: StringNullableFilter<"Creators"> | string | null
    ig_business_account_id?: StringNullableFilter<"Creators"> | string | null
    ig_business_account_username?: StringNullableFilter<"Creators"> | string | null
    fb_user_access_token?: StringNullableFilter<"Creators"> | string | null
  }

  export type CreatorsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    name?: SortOrder
    access_token_expiration?: SortOrderInput | SortOrder
    fb_page_id?: SortOrderInput | SortOrder
    ig_business_account_id?: SortOrderInput | SortOrder
    ig_business_account_username?: SortOrderInput | SortOrder
    fb_user_access_token?: SortOrderInput | SortOrder
  }

  export type CreatorsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    ig_business_account_id?: string
    ig_business_account_username?: string
    AND?: CreatorsWhereInput | CreatorsWhereInput[]
    OR?: CreatorsWhereInput[]
    NOT?: CreatorsWhereInput | CreatorsWhereInput[]
    created_at?: DateTimeFilter<"Creators"> | Date | string
    name?: StringFilter<"Creators"> | string
    access_token_expiration?: DateTimeNullableFilter<"Creators"> | Date | string | null
    fb_page_id?: StringNullableFilter<"Creators"> | string | null
    fb_user_access_token?: StringNullableFilter<"Creators"> | string | null
  }, "id" | "ig_business_account_id" | "ig_business_account_username">

  export type CreatorsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    name?: SortOrder
    access_token_expiration?: SortOrderInput | SortOrder
    fb_page_id?: SortOrderInput | SortOrder
    ig_business_account_id?: SortOrderInput | SortOrder
    ig_business_account_username?: SortOrderInput | SortOrder
    fb_user_access_token?: SortOrderInput | SortOrder
    _count?: CreatorsCountOrderByAggregateInput
    _max?: CreatorsMaxOrderByAggregateInput
    _min?: CreatorsMinOrderByAggregateInput
  }

  export type CreatorsScalarWhereWithAggregatesInput = {
    AND?: CreatorsScalarWhereWithAggregatesInput | CreatorsScalarWhereWithAggregatesInput[]
    OR?: CreatorsScalarWhereWithAggregatesInput[]
    NOT?: CreatorsScalarWhereWithAggregatesInput | CreatorsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Creators"> | string
    created_at?: DateTimeWithAggregatesFilter<"Creators"> | Date | string
    name?: StringWithAggregatesFilter<"Creators"> | string
    access_token_expiration?: DateTimeNullableWithAggregatesFilter<"Creators"> | Date | string | null
    fb_page_id?: StringNullableWithAggregatesFilter<"Creators"> | string | null
    ig_business_account_id?: StringNullableWithAggregatesFilter<"Creators"> | string | null
    ig_business_account_username?: StringNullableWithAggregatesFilter<"Creators"> | string | null
    fb_user_access_token?: StringNullableWithAggregatesFilter<"Creators"> | string | null
  }

  export type IG_MediaWhereInput = {
    AND?: IG_MediaWhereInput | IG_MediaWhereInput[]
    OR?: IG_MediaWhereInput[]
    NOT?: IG_MediaWhereInput | IG_MediaWhereInput[]
    id?: UuidFilter<"IG_Media"> | string
    created_at?: DateTimeFilter<"IG_Media"> | Date | string
    caption?: StringNullableFilter<"IG_Media"> | string | null
    media_type?: StringNullableFilter<"IG_Media"> | string | null
    permalink?: StringNullableFilter<"IG_Media"> | string | null
    timestamp?: DateTimeNullableFilter<"IG_Media"> | Date | string | null
    ig_business_account_id?: StringNullableFilter<"IG_Media"> | string | null
    page_id?: StringNullableFilter<"IG_Media"> | string | null
    ig_business_account_username?: StringNullableFilter<"IG_Media"> | string | null
    media_product_type?: StringNullableFilter<"IG_Media"> | string | null
    ig_media_id?: StringNullableFilter<"IG_Media"> | string | null
    image_url_l?: StringNullableFilter<"IG_Media"> | string | null
    image_url_m?: StringNullableFilter<"IG_Media"> | string | null
  }

  export type IG_MediaOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    caption?: SortOrderInput | SortOrder
    media_type?: SortOrderInput | SortOrder
    permalink?: SortOrderInput | SortOrder
    timestamp?: SortOrderInput | SortOrder
    ig_business_account_id?: SortOrderInput | SortOrder
    page_id?: SortOrderInput | SortOrder
    ig_business_account_username?: SortOrderInput | SortOrder
    media_product_type?: SortOrderInput | SortOrder
    ig_media_id?: SortOrderInput | SortOrder
    image_url_l?: SortOrderInput | SortOrder
    image_url_m?: SortOrderInput | SortOrder
  }

  export type IG_MediaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    ig_media_id?: string
    AND?: IG_MediaWhereInput | IG_MediaWhereInput[]
    OR?: IG_MediaWhereInput[]
    NOT?: IG_MediaWhereInput | IG_MediaWhereInput[]
    created_at?: DateTimeFilter<"IG_Media"> | Date | string
    caption?: StringNullableFilter<"IG_Media"> | string | null
    media_type?: StringNullableFilter<"IG_Media"> | string | null
    permalink?: StringNullableFilter<"IG_Media"> | string | null
    timestamp?: DateTimeNullableFilter<"IG_Media"> | Date | string | null
    ig_business_account_id?: StringNullableFilter<"IG_Media"> | string | null
    page_id?: StringNullableFilter<"IG_Media"> | string | null
    ig_business_account_username?: StringNullableFilter<"IG_Media"> | string | null
    media_product_type?: StringNullableFilter<"IG_Media"> | string | null
    image_url_l?: StringNullableFilter<"IG_Media"> | string | null
    image_url_m?: StringNullableFilter<"IG_Media"> | string | null
  }, "id" | "ig_media_id">

  export type IG_MediaOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    caption?: SortOrderInput | SortOrder
    media_type?: SortOrderInput | SortOrder
    permalink?: SortOrderInput | SortOrder
    timestamp?: SortOrderInput | SortOrder
    ig_business_account_id?: SortOrderInput | SortOrder
    page_id?: SortOrderInput | SortOrder
    ig_business_account_username?: SortOrderInput | SortOrder
    media_product_type?: SortOrderInput | SortOrder
    ig_media_id?: SortOrderInput | SortOrder
    image_url_l?: SortOrderInput | SortOrder
    image_url_m?: SortOrderInput | SortOrder
    _count?: IG_MediaCountOrderByAggregateInput
    _max?: IG_MediaMaxOrderByAggregateInput
    _min?: IG_MediaMinOrderByAggregateInput
  }

  export type IG_MediaScalarWhereWithAggregatesInput = {
    AND?: IG_MediaScalarWhereWithAggregatesInput | IG_MediaScalarWhereWithAggregatesInput[]
    OR?: IG_MediaScalarWhereWithAggregatesInput[]
    NOT?: IG_MediaScalarWhereWithAggregatesInput | IG_MediaScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"IG_Media"> | string
    created_at?: DateTimeWithAggregatesFilter<"IG_Media"> | Date | string
    caption?: StringNullableWithAggregatesFilter<"IG_Media"> | string | null
    media_type?: StringNullableWithAggregatesFilter<"IG_Media"> | string | null
    permalink?: StringNullableWithAggregatesFilter<"IG_Media"> | string | null
    timestamp?: DateTimeNullableWithAggregatesFilter<"IG_Media"> | Date | string | null
    ig_business_account_id?: StringNullableWithAggregatesFilter<"IG_Media"> | string | null
    page_id?: StringNullableWithAggregatesFilter<"IG_Media"> | string | null
    ig_business_account_username?: StringNullableWithAggregatesFilter<"IG_Media"> | string | null
    media_product_type?: StringNullableWithAggregatesFilter<"IG_Media"> | string | null
    ig_media_id?: StringNullableWithAggregatesFilter<"IG_Media"> | string | null
    image_url_l?: StringNullableWithAggregatesFilter<"IG_Media"> | string | null
    image_url_m?: StringNullableWithAggregatesFilter<"IG_Media"> | string | null
  }

  export type Scraped_recipesWhereInput = {
    AND?: Scraped_recipesWhereInput | Scraped_recipesWhereInput[]
    OR?: Scraped_recipesWhereInput[]
    NOT?: Scraped_recipesWhereInput | Scraped_recipesWhereInput[]
    id?: UuidFilter<"Scraped_recipes"> | string
    created_at?: DateTimeFilter<"Scraped_recipes"> | Date | string
    url?: StringNullableFilter<"Scraped_recipes"> | string | null
    title?: StringNullableFilter<"Scraped_recipes"> | string | null
    image?: StringNullableFilter<"Scraped_recipes"> | string | null
    content?: JsonNullableFilter<"Scraped_recipes">
    times?: JsonNullableFilter<"Scraped_recipes">
    servings?: StringNullableFilter<"Scraped_recipes"> | string | null
    ingredients?: JsonNullableFilter<"Scraped_recipes">
    instructions?: JsonNullableFilter<"Scraped_recipes">
    creator?: StringNullableFilter<"Scraped_recipes"> | string | null
  }

  export type Scraped_recipesOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    url?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    times?: SortOrderInput | SortOrder
    servings?: SortOrderInput | SortOrder
    ingredients?: SortOrderInput | SortOrder
    instructions?: SortOrderInput | SortOrder
    creator?: SortOrderInput | SortOrder
  }

  export type Scraped_recipesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: Scraped_recipesWhereInput | Scraped_recipesWhereInput[]
    OR?: Scraped_recipesWhereInput[]
    NOT?: Scraped_recipesWhereInput | Scraped_recipesWhereInput[]
    created_at?: DateTimeFilter<"Scraped_recipes"> | Date | string
    url?: StringNullableFilter<"Scraped_recipes"> | string | null
    title?: StringNullableFilter<"Scraped_recipes"> | string | null
    image?: StringNullableFilter<"Scraped_recipes"> | string | null
    content?: JsonNullableFilter<"Scraped_recipes">
    times?: JsonNullableFilter<"Scraped_recipes">
    servings?: StringNullableFilter<"Scraped_recipes"> | string | null
    ingredients?: JsonNullableFilter<"Scraped_recipes">
    instructions?: JsonNullableFilter<"Scraped_recipes">
    creator?: StringNullableFilter<"Scraped_recipes"> | string | null
  }, "id">

  export type Scraped_recipesOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    url?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    times?: SortOrderInput | SortOrder
    servings?: SortOrderInput | SortOrder
    ingredients?: SortOrderInput | SortOrder
    instructions?: SortOrderInput | SortOrder
    creator?: SortOrderInput | SortOrder
    _count?: Scraped_recipesCountOrderByAggregateInput
    _max?: Scraped_recipesMaxOrderByAggregateInput
    _min?: Scraped_recipesMinOrderByAggregateInput
  }

  export type Scraped_recipesScalarWhereWithAggregatesInput = {
    AND?: Scraped_recipesScalarWhereWithAggregatesInput | Scraped_recipesScalarWhereWithAggregatesInput[]
    OR?: Scraped_recipesScalarWhereWithAggregatesInput[]
    NOT?: Scraped_recipesScalarWhereWithAggregatesInput | Scraped_recipesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Scraped_recipes"> | string
    created_at?: DateTimeWithAggregatesFilter<"Scraped_recipes"> | Date | string
    url?: StringNullableWithAggregatesFilter<"Scraped_recipes"> | string | null
    title?: StringNullableWithAggregatesFilter<"Scraped_recipes"> | string | null
    image?: StringNullableWithAggregatesFilter<"Scraped_recipes"> | string | null
    content?: JsonNullableWithAggregatesFilter<"Scraped_recipes">
    times?: JsonNullableWithAggregatesFilter<"Scraped_recipes">
    servings?: StringNullableWithAggregatesFilter<"Scraped_recipes"> | string | null
    ingredients?: JsonNullableWithAggregatesFilter<"Scraped_recipes">
    instructions?: JsonNullableWithAggregatesFilter<"Scraped_recipes">
    creator?: StringNullableWithAggregatesFilter<"Scraped_recipes"> | string | null
  }

  export type UsersWhereInput = {
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    id?: UuidFilter<"Users"> | string
    created_at?: DateTimeFilter<"Users"> | Date | string
    email?: StringFilter<"Users"> | string
    password?: StringFilter<"Users"> | string
    name?: StringFilter<"Users"> | string
  }

  export type UsersOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
  }

  export type UsersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    created_at?: DateTimeFilter<"Users"> | Date | string
    password?: StringFilter<"Users"> | string
    name?: StringFilter<"Users"> | string
  }, "id" | "email">

  export type UsersOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
    _count?: UsersCountOrderByAggregateInput
    _max?: UsersMaxOrderByAggregateInput
    _min?: UsersMinOrderByAggregateInput
  }

  export type UsersScalarWhereWithAggregatesInput = {
    AND?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    OR?: UsersScalarWhereWithAggregatesInput[]
    NOT?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Users"> | string
    created_at?: DateTimeWithAggregatesFilter<"Users"> | Date | string
    email?: StringWithAggregatesFilter<"Users"> | string
    password?: StringWithAggregatesFilter<"Users"> | string
    name?: StringWithAggregatesFilter<"Users"> | string
  }

  export type CreatorsCreateInput = {
    id?: string
    created_at?: Date | string
    name: string
    access_token_expiration?: Date | string | null
    fb_page_id?: string | null
    ig_business_account_id?: string | null
    ig_business_account_username?: string | null
    fb_user_access_token?: string | null
  }

  export type CreatorsUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    name: string
    access_token_expiration?: Date | string | null
    fb_page_id?: string | null
    ig_business_account_id?: string | null
    ig_business_account_username?: string | null
    fb_user_access_token?: string | null
  }

  export type CreatorsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    access_token_expiration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fb_page_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_username?: NullableStringFieldUpdateOperationsInput | string | null
    fb_user_access_token?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CreatorsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    access_token_expiration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fb_page_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_username?: NullableStringFieldUpdateOperationsInput | string | null
    fb_user_access_token?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CreatorsCreateManyInput = {
    id?: string
    created_at?: Date | string
    name: string
    access_token_expiration?: Date | string | null
    fb_page_id?: string | null
    ig_business_account_id?: string | null
    ig_business_account_username?: string | null
    fb_user_access_token?: string | null
  }

  export type CreatorsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    access_token_expiration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fb_page_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_username?: NullableStringFieldUpdateOperationsInput | string | null
    fb_user_access_token?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CreatorsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: StringFieldUpdateOperationsInput | string
    access_token_expiration?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fb_page_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_username?: NullableStringFieldUpdateOperationsInput | string | null
    fb_user_access_token?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IG_MediaCreateInput = {
    id?: string
    created_at?: Date | string
    caption?: string | null
    media_type?: string | null
    permalink?: string | null
    timestamp?: Date | string | null
    ig_business_account_id?: string | null
    page_id?: string | null
    ig_business_account_username?: string | null
    media_product_type?: string | null
    ig_media_id?: string | null
    image_url_l?: string | null
    image_url_m?: string | null
  }

  export type IG_MediaUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    caption?: string | null
    media_type?: string | null
    permalink?: string | null
    timestamp?: Date | string | null
    ig_business_account_id?: string | null
    page_id?: string | null
    ig_business_account_username?: string | null
    media_product_type?: string | null
    ig_media_id?: string | null
    image_url_l?: string | null
    image_url_m?: string | null
  }

  export type IG_MediaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    permalink?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ig_business_account_id?: NullableStringFieldUpdateOperationsInput | string | null
    page_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_username?: NullableStringFieldUpdateOperationsInput | string | null
    media_product_type?: NullableStringFieldUpdateOperationsInput | string | null
    ig_media_id?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_l?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_m?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IG_MediaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    permalink?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ig_business_account_id?: NullableStringFieldUpdateOperationsInput | string | null
    page_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_username?: NullableStringFieldUpdateOperationsInput | string | null
    media_product_type?: NullableStringFieldUpdateOperationsInput | string | null
    ig_media_id?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_l?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_m?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IG_MediaCreateManyInput = {
    id?: string
    created_at?: Date | string
    caption?: string | null
    media_type?: string | null
    permalink?: string | null
    timestamp?: Date | string | null
    ig_business_account_id?: string | null
    page_id?: string | null
    ig_business_account_username?: string | null
    media_product_type?: string | null
    ig_media_id?: string | null
    image_url_l?: string | null
    image_url_m?: string | null
  }

  export type IG_MediaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    permalink?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ig_business_account_id?: NullableStringFieldUpdateOperationsInput | string | null
    page_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_username?: NullableStringFieldUpdateOperationsInput | string | null
    media_product_type?: NullableStringFieldUpdateOperationsInput | string | null
    ig_media_id?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_l?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_m?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IG_MediaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    caption?: NullableStringFieldUpdateOperationsInput | string | null
    media_type?: NullableStringFieldUpdateOperationsInput | string | null
    permalink?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ig_business_account_id?: NullableStringFieldUpdateOperationsInput | string | null
    page_id?: NullableStringFieldUpdateOperationsInput | string | null
    ig_business_account_username?: NullableStringFieldUpdateOperationsInput | string | null
    media_product_type?: NullableStringFieldUpdateOperationsInput | string | null
    ig_media_id?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_l?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_m?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Scraped_recipesCreateInput = {
    id?: string
    created_at?: Date | string
    url?: string | null
    title?: string | null
    image?: string | null
    content?: NullableJsonNullValueInput | InputJsonValue
    times?: NullableJsonNullValueInput | InputJsonValue
    servings?: string | null
    ingredients?: NullableJsonNullValueInput | InputJsonValue
    instructions?: NullableJsonNullValueInput | InputJsonValue
    creator?: string | null
  }

  export type Scraped_recipesUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    url?: string | null
    title?: string | null
    image?: string | null
    content?: NullableJsonNullValueInput | InputJsonValue
    times?: NullableJsonNullValueInput | InputJsonValue
    servings?: string | null
    ingredients?: NullableJsonNullValueInput | InputJsonValue
    instructions?: NullableJsonNullValueInput | InputJsonValue
    creator?: string | null
  }

  export type Scraped_recipesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableJsonNullValueInput | InputJsonValue
    times?: NullableJsonNullValueInput | InputJsonValue
    servings?: NullableStringFieldUpdateOperationsInput | string | null
    ingredients?: NullableJsonNullValueInput | InputJsonValue
    instructions?: NullableJsonNullValueInput | InputJsonValue
    creator?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Scraped_recipesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableJsonNullValueInput | InputJsonValue
    times?: NullableJsonNullValueInput | InputJsonValue
    servings?: NullableStringFieldUpdateOperationsInput | string | null
    ingredients?: NullableJsonNullValueInput | InputJsonValue
    instructions?: NullableJsonNullValueInput | InputJsonValue
    creator?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Scraped_recipesCreateManyInput = {
    id?: string
    created_at?: Date | string
    url?: string | null
    title?: string | null
    image?: string | null
    content?: NullableJsonNullValueInput | InputJsonValue
    times?: NullableJsonNullValueInput | InputJsonValue
    servings?: string | null
    ingredients?: NullableJsonNullValueInput | InputJsonValue
    instructions?: NullableJsonNullValueInput | InputJsonValue
    creator?: string | null
  }

  export type Scraped_recipesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableJsonNullValueInput | InputJsonValue
    times?: NullableJsonNullValueInput | InputJsonValue
    servings?: NullableStringFieldUpdateOperationsInput | string | null
    ingredients?: NullableJsonNullValueInput | InputJsonValue
    instructions?: NullableJsonNullValueInput | InputJsonValue
    creator?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Scraped_recipesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableJsonNullValueInput | InputJsonValue
    times?: NullableJsonNullValueInput | InputJsonValue
    servings?: NullableStringFieldUpdateOperationsInput | string | null
    ingredients?: NullableJsonNullValueInput | InputJsonValue
    instructions?: NullableJsonNullValueInput | InputJsonValue
    creator?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsersCreateInput = {
    id?: string
    created_at?: Date | string
    email: string
    password: string
    name: string
  }

  export type UsersUncheckedCreateInput = {
    id?: string
    created_at?: Date | string
    email: string
    password: string
    name: string
  }

  export type UsersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type UsersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type UsersCreateManyInput = {
    id?: string
    created_at?: Date | string
    email: string
    password: string
    name: string
  }

  export type UsersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type UsersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CreatorsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    name?: SortOrder
    access_token_expiration?: SortOrder
    fb_page_id?: SortOrder
    ig_business_account_id?: SortOrder
    ig_business_account_username?: SortOrder
    fb_user_access_token?: SortOrder
  }

  export type CreatorsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    name?: SortOrder
    access_token_expiration?: SortOrder
    fb_page_id?: SortOrder
    ig_business_account_id?: SortOrder
    ig_business_account_username?: SortOrder
    fb_user_access_token?: SortOrder
  }

  export type CreatorsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    name?: SortOrder
    access_token_expiration?: SortOrder
    fb_page_id?: SortOrder
    ig_business_account_id?: SortOrder
    ig_business_account_username?: SortOrder
    fb_user_access_token?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IG_MediaCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    caption?: SortOrder
    media_type?: SortOrder
    permalink?: SortOrder
    timestamp?: SortOrder
    ig_business_account_id?: SortOrder
    page_id?: SortOrder
    ig_business_account_username?: SortOrder
    media_product_type?: SortOrder
    ig_media_id?: SortOrder
    image_url_l?: SortOrder
    image_url_m?: SortOrder
  }

  export type IG_MediaMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    caption?: SortOrder
    media_type?: SortOrder
    permalink?: SortOrder
    timestamp?: SortOrder
    ig_business_account_id?: SortOrder
    page_id?: SortOrder
    ig_business_account_username?: SortOrder
    media_product_type?: SortOrder
    ig_media_id?: SortOrder
    image_url_l?: SortOrder
    image_url_m?: SortOrder
  }

  export type IG_MediaMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    caption?: SortOrder
    media_type?: SortOrder
    permalink?: SortOrder
    timestamp?: SortOrder
    ig_business_account_id?: SortOrder
    page_id?: SortOrder
    ig_business_account_username?: SortOrder
    media_product_type?: SortOrder
    ig_media_id?: SortOrder
    image_url_l?: SortOrder
    image_url_m?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type Scraped_recipesCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    url?: SortOrder
    title?: SortOrder
    image?: SortOrder
    content?: SortOrder
    times?: SortOrder
    servings?: SortOrder
    ingredients?: SortOrder
    instructions?: SortOrder
    creator?: SortOrder
  }

  export type Scraped_recipesMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    url?: SortOrder
    title?: SortOrder
    image?: SortOrder
    servings?: SortOrder
    creator?: SortOrder
  }

  export type Scraped_recipesMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    url?: SortOrder
    title?: SortOrder
    image?: SortOrder
    servings?: SortOrder
    creator?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type UsersCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
  }

  export type UsersMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
  }

  export type UsersMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    email?: SortOrder
    password?: SortOrder
    name?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CreatorsDefaultArgs instead
     */
    export type CreatorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CreatorsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use IG_MediaDefaultArgs instead
     */
    export type IG_MediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = IG_MediaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Scraped_recipesDefaultArgs instead
     */
    export type Scraped_recipesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Scraped_recipesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsersDefaultArgs instead
     */
    export type UsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}